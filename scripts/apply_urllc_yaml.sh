#!/bin/bash

# ==============================================================================
# Apply URLLC Configuration via YAML
# ==============================================================================
# Descri√ß√£o: Aplica configura√ß√µes URLLC via arquivo thingsboard-urllc.yml
# Uso: make apply-urllc-yaml ou ./scripts/apply_urllc_yaml.sh
# Categoria: [PRINCIPAL] - Configura√ß√£o YAML
# 
# Funcionalidades:
# - Rebuild do container ThingsBoard com configura√ß√£o YAML otimizada
# - Restart autom√°tico para aplicar configura√ß√µes
# - Verifica√ß√£o de aplica√ß√£o das configura√ß√µes
# ==============================================================================

echo "üéØ Aplicando configura√ß√µes URLLC via YAML..."

# 1. Verificar se arquivo de configura√ß√£o existe
CONFIG_FILE="/var/condominio-scenario/config/thingsboard-urllc.yml"
if [ ! -f "$CONFIG_FILE" ]; then
    echo "‚ùå Arquivo de configura√ß√£o n√£o encontrado: $CONFIG_FILE"
    exit 1
fi

echo "‚úÖ Arquivo de configura√ß√£o encontrado"

# 2. Rebuild apenas do container ThingsBoard
echo "üî® Rebuilding container ThingsBoard com configura√ß√µes YAML..."
cd /var/condominio-scenario
sudo docker build -t tb-node-custom -f dockerfiles/Dockerfile.tb services/ || {
    echo "‚ùå Falha no build do container ThingsBoard"
    exit 1
}

# 3. Restart do container ThingsBoard se estiver rodando
if docker ps --format "{{.Names}}" | grep -q "^mn.tb$"; then
    echo "üîÑ Reiniciando container ThingsBoard para aplicar configura√ß√µes YAML..."
    sudo docker restart mn.tb
    
    echo "‚è≥ Aguardando ThingsBoard reinicializar..."
    sleep 15
    
    # Verificar se reiniciou corretamente
    retries=0
    while [ $retries -lt 30 ]; do
        if docker exec mn.tb pgrep -f thingsboard > /dev/null 2>&1; then
            echo "‚úÖ ThingsBoard reiniciado com sucesso"
            break
        fi
        sleep 2
        retries=$((retries + 1))
    done
    
    if [ $retries -eq 30 ]; then
        echo "‚ö†Ô∏è ThingsBoard demorou para reiniciar, mas processo continua..."
    fi
else
    echo "‚ÑπÔ∏è ThingsBoard n√£o est√° rodando, configura√ß√µes ser√£o aplicadas no pr√≥ximo start"
fi

# 4. Verificar configura√ß√µes aplicadas
echo "üîç Verificando configura√ß√µes YAML aplicadas..."

if docker ps --format "{{.Names}}" | grep -q "^mn.tb$"; then
    # Verificar heap size
    echo "üìä Verificando heap do JVM..."
    heap_info=$(docker exec mn.tb java -XX:+PrintFlagsFinal -version 2>&1 | grep -E "MaxHeapSize|InitialHeapSize" || echo "N√£o encontrado")
    echo "$heap_info"
    
    # Verificar se arquivo de configura√ß√£o foi carregado
    echo "üìÑ Verificando arquivo de configura√ß√£o carregado..."
    if docker exec mn.tb test -f /usr/share/thingsboard/conf/thingsboard.yml; then
        echo "‚úÖ Arquivo thingsboard.yml presente"
        # Mostrar algumas configura√ß√µes chave
        echo "üîß Configura√ß√µes URLLC aplicadas:"
        docker exec mn.tb grep -E "CLIENT_SIDE_RPC_TIMEOUT|SQL_TS_BATCH|JAVA_OPTS" /usr/share/thingsboard/conf/thingsboard.yml 2>/dev/null || echo "Configura√ß√µes padr√£o aplicadas"
    else
        echo "‚ö†Ô∏è Arquivo de configura√ß√£o n√£o encontrado no container"
    fi
else
    echo "‚ÑπÔ∏è ThingsBoard n√£o est√° rodando para verifica√ß√£o"
fi

echo ""
echo "‚úÖ Configura√ß√µes URLLC aplicadas via YAML!"
echo ""
echo "üìã Principais otimiza√ß√µes aplicadas:"
echo "  ‚Ä¢ CLIENT_SIDE_RPC_TIMEOUT: 1000ms (vs 60000ms padr√£o)"
echo "  ‚Ä¢ SQL_TS_BATCH_MAX_DELAY_MS: 10ms (vs 100ms padr√£o)"
echo "  ‚Ä¢ JAVA_OPTS: Heap 12GB, G1GC otimizado"
echo "  ‚Ä¢ Thread pools: 32 workers otimizados"
echo "  ‚Ä¢ HTTP timeouts: Reduzidos para URLLC"
echo "  ‚Ä¢ MQTT timeout: 5000ms (vs 10000ms padr√£o)"
echo ""
echo "üöÄ Execute 'make odte-full' para testar lat√™ncias <200ms!"